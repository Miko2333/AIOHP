# Generated by Django 5.0.6 on 2024-06-08 13:39

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Teacher",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "teacher_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("number", models.CharField(blank=True, max_length=100, null=True)),
                ("academy", models.CharField(blank=True, max_length=100, null=True)),
                ("address", models.CharField(blank=True, max_length=200, null=True)),
                ("capacity", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "total_class_hours",
                    models.PositiveIntegerField(
                        blank=True,
                        choices=[
                            (32, "32 hours"),
                            (48, "48 hours"),
                            (64, "64 hours"),
                            (128, "128 hours"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "day_of_week",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Monday", "Monday"),
                            ("Tuesday", "Tuesday"),
                            ("Wednesday", "Wednesday"),
                            ("Thursday", "Thursday"),
                            ("Friday", "Friday"),
                            ("Saturday", "Saturday"),
                            ("Sunday", "Sunday"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("start_time", models.TimeField(blank=True, null=True)),
                ("end_time", models.TimeField(blank=True, null=True)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                (
                    "student",
                    models.ManyToManyField(
                        blank=True, related_name="course", to="accounts.student"
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.teacher",
                    ),
                ),
            ],
        ),
    ]
